#version: '3'

networks:
  kafka-net:
    driver: bridge
#  elk-network: # Define a custom network for inter-service communication
#    driver: bridge

services:
  kafka:
    image: apache/kafka:4.1.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "3000"
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      KAFKA_METADATA_LOG_DIR: /tmp/kraft-metadata-logs
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
      KAFKA_GROUP_PROTOCOL_CONFIG_QUEUE_ENABLED: "true"
      KAFKA_GROUP_MAX_SIZE: "100"
      KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: "6000"
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_UNSTABLE_API_VERSIONS_ENABLE: "true"
      KAFKA_GROUP_COORDINATOR_REBALANCE_PROTOCOLS: "classic,consumer,share"
      KAFKA_SHARE_COORDINATOR_STATE_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "/opt/kafka/bin/kafka-topics.sh --bootstrap-server localhost:29092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - kafka-net

  kafka-topics:
    image: apache/kafka:4.1.0
    depends_on:
      kafka:
        condition: service_healthy
    command: >
      bash -c "
        echo 'Updating Broker...' &&
        /opt/kafka/bin/kafka-features.sh --bootstrap-server kafka:29092 upgrade --feature share.version=1
        echo 'Kafka is ready, creating topic...' &&
        /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:29092 --topic cohort-load --partitions 1 --replication-factor 1 &&
        echo 'Topic events-string created successfully' &&
        /opt/kafka/bin/kafka-topics.sh --describe --bootstrap-server kafka:29092 --topic cohort-load &&
        echo 'Kafka is ready, creating topic...' &&
        /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:29092 --topic cohort-file-process --partitions 3 --replication-factor 1 &&
        echo 'Topic events-string created successfully' &&
        /opt/kafka/bin/kafka-topics.sh --describe --bootstrap-server kafka:29092 --topic cohort-file-process &&
        echo 'Kafka is ready, creating topic...' &&
        /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:29092 --topic cohort-member-command --partitions 3 --replication-factor 1 &&
        echo 'Topic events-string created successfully' &&
        /opt/kafka/bin/kafka-topics.sh --describe --bootstrap-server kafka:29092 --topic cohort-member-command
      "
    networks:
      - kafka-net